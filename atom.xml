<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PerseisQAQ&#39;s blog</title>
  
  
  <link href="https://perseisqaq.github.io/atom.xml" rel="self"/>
  
  <link href="https://perseisqaq.github.io/"/>
  <updated>2025-03-20T12:38:23.000Z</updated>
  <id>https://perseisqaq.github.io/</id>
  
  <author>
    <name>PerseisQAQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>sublime搭建C++编译环境</title>
    <link href="https://perseisqaq.github.io/2025/03/20/23/"/>
    <id>https://perseisqaq.github.io/2025/03/20/23/</id>
    <published>2025-03-20T12:38:23.000Z</published>
    <updated>2025-03-20T12:38:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h2><span id="more"></span><h3 id="下载并安装sublime"><a href="#下载并安装sublime" class="headerlink" title="下载并安装sublime"></a>下载并安装sublime</h3><p><a href="https://www.sublimetext.com/3">https://www.sublimetext.com/3</a></p><h3 id="下载并安装编译器"><a href="#下载并安装编译器" class="headerlink" title="下载并安装编译器"></a>下载并安装编译器</h3><h4 id="下载安装MinGW"><a href="#下载安装MinGW" class="headerlink" title="下载安装MinGW"></a>下载安装MinGW</h4><p><a href="https://sourceforge.net/projects/mingw/files/">https://sourceforge.net/projects/mingw/files/</a></p><p>点击Download Latest Version</p><p><img src="https://raw.githubusercontent.com/PerseisQAQ/pic/master/blog/sublime/mingwd.png" alt="pic"></p><p>安装时选择安装路径，结束后自动进入MinGW Installer Manager，修改GCC编译器的配置</p><p>为了使GCC编译器支持C&#x2F;C++，勾选下图中两项</p><p><img src="https://raw.githubusercontent.com/PerseisQAQ/pic/master/blog/sublime/mingwselect.png" alt="pic"></p><h4 id="修改环境变量"><a href="#修改环境变量" class="headerlink" title="修改环境变量"></a>修改环境变量</h4><p>在 PATH中添加MinGW的<strong>bin</strong>安装目录</p><p><img src="https://raw.githubusercontent.com/PerseisQAQ/pic/master/blog/sublime/path.png" alt="pic"></p><p>打开命令行窗口，输入<code>gcc -v</code>指令，如果输出GCC编译器的信息，则表示安装成功，如</p><p><img src="https://raw.githubusercontent.com/PerseisQAQ/pic/master/blog/sublime/cmd.png" alt="pic"></p><h3 id="配置sublime"><a href="#配置sublime" class="headerlink" title="配置sublime"></a>配置sublime</h3><p>Tools-&gt; Build System -&gt; New build system</p><p><img src="https://raw.githubusercontent.com/PerseisQAQ/pic/master/blog/sublime/buildsys.png" alt="pic"></p><p>复制粘贴保存到默认路径，从input.txt读入，output.txt输出，Ctrl+B编译<br>路径如：C:\Users\zhw45\AppData\Roaming\Sublime Text 3\Packages\User</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;D:\\Coding\\MinGW\\bin&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;shell_cmd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ \&quot;$&#123;file&#125;\&quot; -o \&quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file_regex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;working_dir&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;file_path&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selector&quot;</span><span class="punctuation">:</span> <span class="string">&quot;source.c, source.c++&quot;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">&quot;variants&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Run&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;shell_cmd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;g++ \&quot;$&#123;file&#125;\&quot; -o \&quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;\&quot; &amp;&amp; \&quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;\&quot; &lt; input.txt &gt; output.txt&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>将编译器设置为三列，就可以左边放input，右边放output，中间放代码</p><p><img src="https://raw.githubusercontent.com/PerseisQAQ/pic/master/blog/sublime/layout.png" alt="pic"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;下载与安装&quot;&gt;&lt;a href=&quot;#下载与安装&quot; class=&quot;headerlink&quot; title=&quot;下载与安装&quot;&gt;&lt;/a&gt;下载与安装&lt;/h2&gt;</summary>
    
    
    
    
    <category term="环境搭建" scheme="https://perseisqaq.github.io/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-08-09</title>
    <link href="https://perseisqaq.github.io/2024/08/09/00/"/>
    <id>https://perseisqaq.github.io/2024/08/09/00/</id>
    <published>2024-08-09T13:26:00.000Z</published>
    <updated>2024-08-09T13:26:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3132.找出与数组相加的整数 II</p><span id="more"></span><p><a href="https://leetcode.cn/problems/find-the-integer-added-to-array-ii/description/?envType=daily-question&amp;envId=2024-08-09">https://leetcode.cn/problems/find-the-integer-added-to-array-ii/description/?envType=daily-question&amp;envId=2024-08-09</a></p><p>给你两个长度相等的数组<code>nums1</code>和<code>nums2</code>。</p><p>从 <code>nums1</code> 中移除两个元素，并且所有其他元素都与变量 <code>x</code> 所表示的整数相加。如果 <code>x</code> 为负数，则表现为元素值的减少。</p><p>执行上述操作后，<code>nums1</code>和<code>nums2</code><strong>相等</strong>。当两个数组中包含相同的整数，并且这些整数出现的频次相同时，两个数组 <strong>相等</strong>。</p><p>返回能够实现数组相等的 <strong>最小</strong> 整数<code>x</code>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>同一数组内每个数与相同的数相加，他们的相对大小不会改变。那么两个数组之间的大小对应关系不会改变。<br>因为只能删除两个数，所以依次枚举nums2[0]分别于nums1的前三个数相对应，看他们之间的差是否符合数组内的其他数。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minimumAddedInteger</span><span class="params">(nums1 []<span class="type">int</span>, nums2 []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    sort.Ints(nums1)</span><br><span class="line">    sort.Ints(nums2)</span><br><span class="line">    ans := <span class="number">2010</span></span><br><span class="line">    n := <span class="built_in">len</span>(nums2)</span><br><span class="line">    <span class="keyword">for</span> o:=<span class="number">0</span>;o&lt;<span class="number">3</span>;o++&#123;</span><br><span class="line">        flag,cnt,tmp,l := <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">        tmp = nums2[<span class="number">0</span>]-nums1[o]</span><br><span class="line">        <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">            <span class="keyword">for</span> nums2[i]-nums1[l] != tmp&#123;</span><br><span class="line">                cnt++</span><br><span class="line">                l++</span><br><span class="line">                <span class="keyword">if</span> cnt == <span class="number">3</span>||l&gt;=n+<span class="number">2</span>&#123;</span><br><span class="line">                    flag = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> flag == <span class="number">1</span>&#123;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            l++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">0</span>&#123;</span><br><span class="line">            ans = min(ans,tmp)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3132.找出与数组相加的整数 II&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-08-08</title>
    <link href="https://perseisqaq.github.io/2024/08/08/29/"/>
    <id>https://perseisqaq.github.io/2024/08/08/29/</id>
    <published>2024-08-08T03:35:29.000Z</published>
    <updated>2024-08-08T03:35:29.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3131.找出与数组相加的整数 I</p><span id="more"></span><p><a href="https://leetcode.cn/problems/find-the-integer-added-to-array-i/description/?envType=daily-question&amp;envId=2024-08-08">https://leetcode.cn/problems/find-the-integer-added-to-array-i/description/?envType=daily-question&amp;envId=2024-08-08</a></p><p>给你两个长度相等的数组<code>nums1</code>和<code>nums2</code>。</p><p>数组<code>nums1</code>中的每个元素都与变量<code>x</code>所表示的整数相加。如果<code>x</code>为负数，则表现为元素值的减少。</p><p>在与<code>x</code>相加后，<code>nums1</code>和<code>nums2</code><strong>相等</strong>。当两个数组中包含相同的整数，并且这些整数出现的频次相同时，两个数组 <strong>相等</strong>。</p><p>返回整数<code>x</code>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>同一数组内每个数与相同的数相加，他们的相对大小不会改变。那么两个数组之间的大小对应关系不会改变-&gt;已知x必定存在，找出两个数组中最小的数并做差即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addedInteger</span><span class="params">(nums1 []<span class="type">int</span>, nums2 []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    min1,min2 := <span class="number">1010</span>,<span class="number">1010</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(nums1);i++&#123;</span><br><span class="line">        min1 = min(min1,nums1[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(nums2);i++&#123;</span><br><span class="line">        min2 = min(min2,nums2[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min2-min1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3131.找出与数组相加的整数 I&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-08-04</title>
    <link href="https://perseisqaq.github.io/2024/08/04/23/"/>
    <id>https://perseisqaq.github.io/2024/08/04/23/</id>
    <published>2024-08-04T13:50:23.000Z</published>
    <updated>2024-08-04T13:50:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>572.另一棵树的子树</p><span id="more"></span><p><a href="https://leetcode.cn/problems/subtree-of-another-tree/description/?envType=daily-question&amp;envId=2024-08-04">https://leetcode.cn/problems/subtree-of-another-tree/description/?envType=daily-question&amp;envId=2024-08-04</a></p><p>给你两棵二叉树<code>root</code>和<code>subRoot</code>。检验<code>root</code>中是否包含和<code>subRoot</code>具有相同结构和节点值的子树。如果存在，返回<code>true</code>；否则，返回<code>false</code>。</p><p>二叉树<code>tree</code>的一棵子树包括<code>tree</code>的某个节点和这个节点的所有后代节点。<code>tree</code>也可以看做它自身的一棵子树。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>判断两个子树相等：他们的值，左子树与右子树都相等，递归判断即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">is_same</span><span class="params">(a,b *TreeNode)</span></span><span class="type">bool</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> a == <span class="literal">nil</span> || b == <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a==b</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a.Val == b.Val &amp;&amp; is_same(a.Left,b.Left) &amp;&amp; is_same(a.Right,b.Right)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isSubtree</span><span class="params">(root *TreeNode, subRoot *TreeNode)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> root == <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> is_same(root,subRoot)||isSubtree(root.Left,subRoot)||isSubtree(root.Right,subRoot)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;572.另一棵树的子树&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-08-03</title>
    <link href="https://perseisqaq.github.io/2024/08/03/13/"/>
    <id>https://perseisqaq.github.io/2024/08/03/13/</id>
    <published>2024-08-02T16:26:13.000Z</published>
    <updated>2024-08-02T16:26:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3143.正方形中的最多点数</p><span id="more"></span><p><a href="https://leetcode.cn/problems/maximum-points-inside-the-square/description/?envType=daily-question&amp;envId=2024-08-03">https://leetcode.cn/problems/maximum-points-inside-the-square/description/?envType=daily-question&amp;envId=2024-08-03</a></p><p>给你一个二维数组<code>points</code>和一个字符串<code>s</code>，其中<code>points[i]</code>表示第<code>i</code>个点的坐标，<code>s[i]</code>表示第<code>i</code>个点的 <strong>标签</strong> 。</p><p>如果一个正方形的中心在<code>(0, 0)</code>，所有边都平行于坐标轴，且正方形内 <strong>不</strong> 存在标签相同的两个点，那么我们称这个正方形是 <strong>合法</strong> 的。</p><p>请你返回 <strong>合法</strong> 正方形中可以包含的 <strong>最多</strong> 点数。</p><p><strong>注意</strong>：</p><p>如果一个点位于正方形的边上或者在边以内，则认为该点位于正方形内。<br>正方形的边长可以为零。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>二分正方形的边长，写个check函数遍历点，看看正方形内有多少个点</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">check</span><span class="params">(x <span class="type">int</span>,points [][]<span class="type">int</span>,s []<span class="type">rune</span>)</span></span><span class="type">int</span>&#123;</span><br><span class="line">    f := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">rune</span>]<span class="type">bool</span>)</span><br><span class="line">    n,res := <span class="built_in">len</span>(points),<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> points[i][<span class="number">0</span>]&lt;=x&amp;&amp;points[i][<span class="number">1</span>]&lt;=x&#123;</span><br><span class="line">            <span class="keyword">if</span> f[s[i]] == <span class="literal">true</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                f[s[i]] = <span class="literal">true</span></span><br><span class="line">                res++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxPointsInsideSquare</span><span class="params">(points [][]<span class="type">int</span>, s <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    l,r,ans := <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    n := <span class="built_in">len</span>(points)</span><br><span class="line">    ss := []<span class="type">rune</span>(s)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> points[i][<span class="number">0</span>]&lt;<span class="number">0</span>&#123;</span><br><span class="line">            points[i][<span class="number">0</span>] = -points[i][<span class="number">0</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> points[i][<span class="number">1</span>]&lt;<span class="number">0</span>&#123;</span><br><span class="line">            points[i][<span class="number">1</span>] = -points[i][<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        r = max(r,max(points[i][<span class="number">0</span>],points[i][<span class="number">1</span>]))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> l+<span class="number">1</span>&lt;r&#123;</span><br><span class="line">        mid := (l+r)/<span class="number">2</span></span><br><span class="line">        tmp := check(mid,points,ss)</span><br><span class="line">        <span class="keyword">if</span> tmp&lt;<span class="number">0</span>&#123;</span><br><span class="line">            r = mid<span class="number">-1</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans = max(ans,tmp)</span><br><span class="line">            l = mid</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    tmp := check(r,points,ss)</span><br><span class="line">    <span class="keyword">if</span> tmp&gt;=<span class="number">0</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> tmp</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> check(l,points,ss)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3143.正方形中的最多点数&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-08-02</title>
    <link href="https://perseisqaq.github.io/2024/08/02/36/"/>
    <id>https://perseisqaq.github.io/2024/08/02/36/</id>
    <published>2024-08-01T16:33:36.000Z</published>
    <updated>2024-08-01T16:33:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3128.直角三角形</p><span id="more"></span><p><a href="https://leetcode.cn/problems/right-triangles/description/?envType=daily-question&amp;envId=2024-08-02">https://leetcode.cn/problems/right-triangles/description/?envType=daily-question&amp;envId=2024-08-02</a></p><p>给你一个二维 boolean 矩阵<code>grid</code>。</p><p>请你返回使用<code>grid</code>中的 3 个元素可以构建的 <strong>直角三角形</strong> 数目，且满足 3 个元素值 <strong>都</strong> 为 1 。</p><p>注意：</p><p>如果<code>grid</code>中 3 个元素满足：一个元素与另一个元素在 <strong>同一行</strong>，同时与第三个元素在 <strong>同一列</strong> ，那么这 3 个元素称为一个 <strong>直角三角形</strong> 。这 3 个元素互相之间不需要相邻。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>由于满足一个在同一行，一个在同一列就可以，那么对于每一个1，我们枚举以它为三角形顶点，看有多少个1与它在同一行&#x2F;列，并相乘即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numberOfRightTriangles</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int64</span> &#123;</span><br><span class="line">    n, m := <span class="built_in">len</span>(grid), <span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">    c := <span class="built_in">make</span>([]<span class="type">int64</span>, n)</span><br><span class="line">    r := <span class="built_in">make</span>([]<span class="type">int64</span>, m)</span><br><span class="line">    <span class="keyword">var</span> ans <span class="type">int64</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">        <span class="keyword">for</span> j := <span class="number">0</span>; j &lt; m; j++ &#123;</span><br><span class="line">            <span class="keyword">if</span> grid[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">                c[i]++</span><br><span class="line">                r[j]++</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(c)</span><br><span class="line">    fmt.Println(r)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">        <span class="keyword">for</span> j := <span class="number">0</span>; j &lt; m; j++ &#123;</span><br><span class="line">            <span class="keyword">if</span> grid[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">                ans += (c[i] - <span class="number">1</span>) * (r[j] - <span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3128.直角三角形&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-08-01</title>
    <link href="https://perseisqaq.github.io/2024/08/01/40/"/>
    <id>https://perseisqaq.github.io/2024/08/01/40/</id>
    <published>2024-08-01T15:55:40.000Z</published>
    <updated>2024-08-01T15:55:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>LCP 40. 心算挑战</p><span id="more"></span><p><a href="https://leetcode.cn/problems/uOAnQW/description/?envType=daily-question&amp;envId=2024-08-01">https://leetcode.cn/problems/uOAnQW/description/?envType=daily-question&amp;envId=2024-08-01</a></p><p>「力扣挑战赛」心算项目的挑战比赛中，要求选手从<code>N</code>张卡牌中选出<code>cnt</code>张卡牌，若这<code>cnt</code>张卡牌数字总和为偶数，则选手成绩「有效」且得分为 cnt 张卡牌数字总和。 给定数组<code>cards</code>和<code>cnt</code>，其中<code>cards[i]</code>表示第<code>i</code>张卡牌上的数字。 请帮参赛选手计算最大的有效得分。若不存在获取有效得分的卡牌方案，则返回<code>0</code>。</p><p><strong>注意</strong>：一个点可以被多个矩形覆盖。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>写复杂了，学习请参考其他题解<br>将数组分为奇数和偶数，并从大到小排序<br>已知奇数想放进去必须两两一组<br>先看目前的偶数够不够<br>如果不够，先放奇数到偶数足够填满<br>如果奇数放完了还不能满足上述要求，返回0<br>如果此时cnt是奇数，那么必须得先放一个偶数进去<br>然后将剩下的奇数与偶数两两之和比较，放大的那个</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxmiumScore</span><span class="params">(cards []<span class="type">int</span>, cnt <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> even,odd []<span class="type">int</span></span><br><span class="line">    cnt1,cnt2,ans := <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    n := <span class="built_in">len</span>(cards)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> cards[i]%<span class="number">2</span>==<span class="number">0</span>&#123;</span><br><span class="line">            even = <span class="built_in">append</span>(even,cards[i])</span><br><span class="line">            cnt1++</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            odd = <span class="built_in">append</span>(odd,cards[i])</span><br><span class="line">            cnt2++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort.Slice(even,<span class="function"><span class="keyword">func</span><span class="params">(i,j <span class="type">int</span>)</span></span> <span class="type">bool</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> even[i]&gt;even[j]</span><br><span class="line">    &#125;)</span><br><span class="line">    sort.Slice(odd,<span class="function"><span class="keyword">func</span><span class="params">(i,j <span class="type">int</span>)</span></span> <span class="type">bool</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> odd[i]&gt;odd[j]</span><br><span class="line">    &#125;)</span><br><span class="line">    i,j := <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> cnt &gt; <span class="number">1</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> j = <span class="number">0</span>;j+<span class="number">1</span>&lt;cnt2;j+=<span class="number">2</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> cnt &lt;= cnt1&#123;</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">            ans += odd[j]+odd[j+<span class="number">1</span>]</span><br><span class="line">            cnt -= <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> cnt &gt; cnt1&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(cnt,ans)</span><br><span class="line">    <span class="keyword">for</span> cnt &gt; <span class="number">0</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> cnt % <span class="number">2</span> == <span class="number">1</span>&#123;</span><br><span class="line">            ans += even[i]</span><br><span class="line">            i++</span><br><span class="line">            cnt--</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> cnt2 - j &gt; <span class="number">1</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> even[i]+even[i+<span class="number">1</span>]&gt; odd[j]+odd[j+<span class="number">1</span>]&#123;</span><br><span class="line">                fmt.Println(<span class="string">&quot;case 1&quot;</span>)</span><br><span class="line">                ans += even[i]+even[i+<span class="number">1</span>]</span><br><span class="line">                i += <span class="number">2</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                fmt.Println(<span class="string">&quot;case 2&quot;</span>)</span><br><span class="line">                ans += odd[j]+odd[j+<span class="number">1</span>]</span><br><span class="line">                j += <span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">            cnt -= <span class="number">2</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            ans += even[i]+even[i+<span class="number">1</span>]</span><br><span class="line">            i += <span class="number">2</span></span><br><span class="line">            cnt -= <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;LCP 40. 心算挑战&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>go_zero学习笔记</title>
    <link href="https://perseisqaq.github.io/2024/07/31/11/"/>
    <id>https://perseisqaq.github.io/2024/07/31/11/</id>
    <published>2024-07-31T05:39:11.000Z</published>
    <updated>2024-07-31T05:39:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>go-zero学习</p><span id="more"></span><h2 id="api语法"><a href="#api语法" class="headerlink" title="api语法"></a>api语法</h2><h3 id="描述请求和相应的格式"><a href="#描述请求和相应的格式" class="headerlink" title="描述请求和相应的格式"></a>描述请求和相应的格式</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> LoginRequest&#123;</span><br><span class="line">    Username <span class="type">string</span> <span class="string">`json:&quot;username&quot;`</span></span><br><span class="line">    Password <span class="type">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> LoginResponse&#123;</span><br><span class="line">    Code <span class="type">int</span> <span class="string">`json:&quot;code&quot;`</span></span><br><span class="line">    Data <span class="type">string</span> <span class="string">`json:&quot;data&quot;`</span></span><br><span class="line">    Msg <span class="type">string</span> <span class="string">`json:&quot;msg&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> UserInfo&#123;</span><br><span class="line">    UserId <span class="type">uint</span> <span class="string">`json:&quot;user_id&quot;`</span></span><br><span class="line">    Username <span class="type">string</span> <span class="string">`json:&quot;username&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfoResponse&#123;</span><br><span class="line">    Code <span class="type">int</span> <span class="string">`json:&quot;code&quot;`</span></span><br><span class="line">    Data UserInfo <span class="string">`json:&quot;data&quot;`</span></span><br><span class="line">    Msg <span class="type">string</span> <span class="string">`json:&quot;msg&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义微服务接口"><a href="#定义微服务接口" class="headerlink" title="定义微服务接口"></a>定义微服务接口</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">service users&#123;</span><br><span class="line">    <span class="comment">//定义了一个名为 users 的服务。</span></span><br><span class="line">    @handler login</span><br><span class="line">    <span class="comment">//指定了处理 /api/users/login 这个 API 请求的处理器函数名为 login。</span></span><br><span class="line">    post /api/users/login (LoginRequest) returns (LoginResponse)</span><br><span class="line">    <span class="comment">//定义了一个 POST 请求的路由 /api/users/login。</span></span><br><span class="line">    <span class="comment">//请求体的格式为 LoginRequest，表示客户端需要发送包含 username 和 password 的 JSON 数据。</span></span><br><span class="line">    <span class="comment">//响应体的格式为 LoginResponse，表示服务器将返回一个包含 code、data 和 msg 的 JSON 数据。</span></span><br><span class="line">    @handler userInfo</span><br><span class="line">    get /api/users/info returns (UserInfoResponse)</span><br><span class="line">    <span class="comment">//指定了处理 /api/users/info 这个 API 请求的处理器函数名为 userInfo。</span></span><br><span class="line">    <span class="comment">//定义了一个 GET 请求的路由 /api/users/info。</span></span><br><span class="line">    <span class="comment">//不需要请求体。</span></span><br><span class="line">    <span class="comment">//响应体的格式为 UserInfoResponse，表示服务器将返回一个包含 code、data（其中 data 是一个 UserInfo 类型的结构体）和 msg 的 JSON 数据。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用<code>goctl api go -api user.api -dir .</code>生成代码</p><h3 id="api响应封装"><a href="#api响应封装" class="headerlink" title="api响应封装"></a>api响应封装</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> LoginRequest &#123;</span><br><span class="line">    Username <span class="type">string</span> <span class="string">`json:&quot;username&quot;`</span></span><br><span class="line">    Password <span class="type">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> UserInfoResponse &#123;</span><br><span class="line">    UserId   <span class="type">uint</span>   <span class="string">`json:&quot;user_id&quot;`</span></span><br><span class="line">    Username <span class="type">string</span> <span class="string">`json:&quot;username&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">service users &#123;</span><br><span class="line">    @handler login</span><br><span class="line">    post /api/users/login (LoginRequest) returns (<span class="type">string</span>)</span><br><span class="line"></span><br><span class="line">    @handler userInfo</span><br><span class="line">    get /api/users/info returns (UserInfoResponse)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//直接返回内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在项目下新建common-response-enter-go"><a href="#在项目下新建common-response-enter-go" class="headerlink" title="在项目下新建common&#x2F;response&#x2F;enter.go"></a>在项目下新建common&#x2F;response&#x2F;enter.go</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> response</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/zeromicro/go-zero/rest/httpx&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Body <span class="keyword">struct</span> &#123;</span><br><span class="line">    Code <span class="type">int</span>    <span class="string">`json:&quot;code&quot;`</span></span><br><span class="line">    Data any    <span class="string">`json:&quot;data&quot;`</span></span><br><span class="line">    Msg  <span class="type">string</span> <span class="string">`json:&quot;msg&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Response</span><span class="params">(r *http.Request, w http.ResponseWriter, res any, err <span class="type">error</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">//根据不同的错误码，返回不同的错误信息</span></span><br><span class="line">        body := Body&#123;</span><br><span class="line">            Code: <span class="number">10086</span>,</span><br><span class="line">            Data: <span class="literal">nil</span>,</span><br><span class="line">            Msg:  <span class="string">&quot;错误&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        httpx.WriteJson(w, http.StatusOK, body)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    body := Body&#123;</span><br><span class="line">        Code: <span class="number">0</span>,</span><br><span class="line">        Data: res,</span><br><span class="line">        Msg:  <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    httpx.WriteJson(w, http.StatusOK, body)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改handler"><a href="#修改handler" class="headerlink" title="修改handler"></a>修改handler</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">userInfoHandler</span><span class="params">(svcCtx *svc.ServiceContext)</span></span> http.HandlerFunc &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        l := logic.NewUserInfoLogic(r.Context(), svcCtx)</span><br><span class="line">        resp, err := l.UserInfo()</span><br><span class="line">        response.Response(r, w, resp, err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改handler模板"><a href="#修改handler模板" class="headerlink" title="修改handler模板"></a>修改handler模板</h4><ul><li>在终端输入<code>goctl template init</code></li><li>打开<code>C:\Users\Perseis\.goctl\1.6.6\api\handler.tpl</code></li></ul><p>修改为</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> &#123;&#123;.PkgName&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/zeromicro/go-zero/rest/httpx&quot;</span></span><br><span class="line">    <span class="string">&quot;zero_study/common/response&quot;</span></span><br><span class="line">    &#123;&#123;.ImportPackages&#125;&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">&#123;&#123;<span class="keyword">if</span> .HasDoc&#125;&#125;&#123;&#123;.Doc&#125;&#125;&#123;&#123;end&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span></span> &#123;&#123;.HandlerName&#125;&#125;(svcCtx *svc.ServiceContext) http.HandlerFunc &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">        &#123;&#123;<span class="keyword">if</span> .HasRequest&#125;&#125;<span class="keyword">var</span> req types.&#123;&#123;.RequestType&#125;&#125;</span><br><span class="line">        <span class="keyword">if</span> err := httpx.Parse(r, &amp;req); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            httpx.ErrorCtx(r.Context(), w, err)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#123;&#123;end&#125;&#125;l := &#123;&#123;.LogicName&#125;&#125;.New&#123;&#123;.LogicType&#125;&#125;(r.Context(), svcCtx)</span><br><span class="line">        &#123;&#123;<span class="keyword">if</span> .HasResp&#125;&#125;resp, &#123;&#123;end&#125;&#125;err := l.&#123;&#123;.Call&#125;&#125;(&#123;&#123;<span class="keyword">if</span> .HasRequest&#125;&#125;&amp;req&#123;&#123;end&#125;&#125;)</span><br><span class="line">        <span class="comment">//if err != nil &#123;</span></span><br><span class="line">        <span class="comment">//httpx.ErrorCtx(r.Context(), w, err)</span></span><br><span class="line">        <span class="comment">//&#125; else &#123;</span></span><br><span class="line">        <span class="comment">//&#123;&#123;if .HasResp&#125;&#125;httpx.OkJsonCtx(r.Context(), w, resp)&#123;&#123;else&#125;&#125;httpx.Ok(w)&#123;&#123;end&#125;&#125;</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        &#123;&#123;<span class="keyword">if</span> .HasResp&#125;&#125;response.Response(r, w, resp, err)&#123;&#123;<span class="keyword">else</span>&#125;&#125;response.Response(r,w,<span class="literal">nil</span>,err)&#123;&#123;end&#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="定义公共URL前缀"><a href="#定义公共URL前缀" class="headerlink" title="定义公共URL前缀"></a>定义公共URL前缀</h4><p>在Go Zero框架中，<code>@server</code>注解用于定义服务的前缀。它为服务中定义的所有API路由添加一个公共的URL前缀。这样做的好处是可以统一管理和修改API的路径前缀，而不需要逐一修改每个API的路径。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">@server (</span><br><span class="line">    prefix: /api/users</span><br><span class="line">)</span><br><span class="line"><span class="comment">//表示所有在这个服务中定义的API路由都将自动添加 /api/users 作为前缀。</span></span><br><span class="line">service users &#123;</span><br><span class="line">    @handler login</span><br><span class="line">    post /login (LoginRequest) returns (<span class="type">string</span>)</span><br><span class="line"></span><br><span class="line">    @handler userInfo</span><br><span class="line">    get /info returns (UserInfoResponse)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="jwt验证"><a href="#jwt验证" class="headerlink" title="jwt验证"></a>jwt验证</h3><p>添加验证，注意登录要放在验证前</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@server (</span><br><span class="line">    prefix: /api/users</span><br><span class="line">)</span><br><span class="line">service users &#123;</span><br><span class="line">    @handler login</span><br><span class="line">    post /login (LoginRequest) returns (<span class="type">string</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@server (</span><br><span class="line">    prefix: /api/users</span><br><span class="line">    jwt:    Auth</span><br><span class="line">)</span><br><span class="line">service users &#123;</span><br><span class="line">    @handler userInfo</span><br><span class="line">    get /info returns (UserInfoResponse)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>etc\users.yaml</code>,添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Auth:</span> </span><br><span class="line">  <span class="attr">AccessSecret:</span> <span class="number">12345678</span></span><br><span class="line">  <span class="attr">AccessExpire:</span> <span class="number">3600</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AccessSecret:</span> <span class="number">12345678</span></span><br></pre></td></tr></table></figure><p>用途: 这个字段通常用于定义一个密钥或秘密字符串，它在生成和验证访问令牌时使用。<br>示例: 在JWT（JSON Web Token）认证机制中，AccessSecret 会用于签名和验证令牌，以确保令牌的真实性和完整性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AccessExpire:</span> <span class="number">3600</span></span><br></pre></td></tr></table></figure><p>用途: 这个字段通常用于定义访问令牌的有效期，以秒为单位。<br>示例: 3600 表示访问令牌的有效期为3600秒（即1小时）。在此时间之后，令牌将失效，用户需要重新进行身份验证以获取新的令牌。</p><h4 id="在项目下新建common-jwts-enter-go"><a href="#在项目下新建common-jwts-enter-go" class="headerlink" title="在项目下新建common&#x2F;jwts&#x2F;enter.go"></a>在项目下新建common&#x2F;jwts&#x2F;enter.go</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> jwts</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/golang-jwt/jwt/v4&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// JwtPayLoad jwt中payload数据</span></span><br><span class="line"><span class="keyword">type</span> JwtPayLoad <span class="keyword">struct</span> &#123;</span><br><span class="line">    UserID   <span class="type">uint</span>   <span class="string">`json:&quot;user_id&quot;`</span></span><br><span class="line">    Username <span class="type">string</span> <span class="string">`json:&quot;username&quot;`</span> <span class="comment">// 用户名</span></span><br><span class="line">    Role     <span class="type">int</span>    <span class="string">`json:&quot;role&quot;`</span>     <span class="comment">// 权限  1 普通用户  2 管理员</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> CustomClaims <span class="keyword">struct</span> &#123;</span><br><span class="line">    JwtPayLoad</span><br><span class="line">    jwt.RegisteredClaims</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GenToken 创建 Token</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GenToken</span><span class="params">(user JwtPayLoad, accessSecret <span class="type">string</span>, expires <span class="type">int64</span>)</span></span> (<span class="type">string</span>, <span class="type">error</span>) &#123;</span><br><span class="line">    claim := CustomClaims&#123;</span><br><span class="line">        JwtPayLoad: user,</span><br><span class="line">        RegisteredClaims: jwt.RegisteredClaims&#123;</span><br><span class="line">            ExpiresAt: jwt.NewNumericDate(time.Now().Add(time.Hour * time.Duration(expires))),</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    token := jwt.NewWithClaims(jwt.SigningMethodHS256, claim)</span><br><span class="line">    <span class="keyword">return</span> token.SignedString([]<span class="type">byte</span>(accessSecret))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ParseToken 解析 token</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ParseToken</span><span class="params">(tokenStr <span class="type">string</span>, accessSecret <span class="type">string</span>, expires <span class="type">int64</span>)</span></span> (*CustomClaims, <span class="type">error</span>) &#123;</span><br><span class="line"></span><br><span class="line">    token, err := jwt.ParseWithClaims(tokenStr, &amp;CustomClaims&#123;&#125;, <span class="function"><span class="keyword">func</span><span class="params">(token *jwt.Token)</span></span> (<span class="keyword">interface</span>&#123;&#125;, <span class="type">error</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> []<span class="type">byte</span>(accessSecret), <span class="literal">nil</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> claims, ok := token.Claims.(*CustomClaims); ok &amp;&amp; token.Valid &#123;</span><br><span class="line">        <span class="keyword">return</span> claims, <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;invalid token&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;go-zero学习&lt;/p&gt;</summary>
    
    
    
    
    <category term="学习" scheme="https://perseisqaq.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-31</title>
    <link href="https://perseisqaq.github.io/2024/07/31/05/"/>
    <id>https://perseisqaq.github.io/2024/07/31/05/</id>
    <published>2024-07-30T16:50:05.000Z</published>
    <updated>2024-07-30T16:50:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3111.覆盖所有点的最少矩形数目</p><span id="more"></span><p><a href="https://leetcode.cn/problems/minimum-rectangles-to-cover-points/description/?envType=daily-question&amp;envId=2024-07-31">https://leetcode.cn/problems/minimum-rectangles-to-cover-points/description/?envType=daily-question&amp;envId=2024-07-31</a></p><p>给你一个二维整数数组<code>point</code>，其中<code>points[i] = [xi, yi]</code>表示二维平面内的一个点。同时给你一个整数 w 。你需要用矩形 覆盖所有 点。</p><p>每个矩形的左下角在某个点<code>(x1, 0)</code>处，且右上角在某个点<code>(x2, y2)</code>处，其中<code>x1 &lt;= x2</code>且<code>y2 &gt;= 0</code>，同时对于每个矩形都<strong>必须</strong>满足<code>x2 - x1 &lt;= w</code>。</p><p>如果一个点在矩形内或者在边上，我们说这个点被矩形覆盖了。</p><p>请你在确保每个点都<strong>至少</strong>被一个矩形覆盖的前提下，<strong>最少</strong>需要多少个矩形。</p><p><strong>注意</strong>：一个点可以被多个矩形覆盖。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>由题目可知，对矩形的y轴长度没有限制，因此第二维数组对题目没有影响<br>那么对第一维进行排序，让矩形尽可能覆盖多的点，且尽可能不浪费。<br>从左往右遍历，如果当前点没有被覆盖，那么放置一个以所在点x轴为左边界的矩形。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minRectanglesToCoverPoints</span><span class="params">(points [][]<span class="type">int</span>, w <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    sort.Slice(points,<span class="function"><span class="keyword">func</span><span class="params">(i,j <span class="type">int</span>)</span></span><span class="type">bool</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> points[i][<span class="number">0</span>]&lt;points[j][<span class="number">0</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">    n,cur,ans := <span class="built_in">len</span>(points),<span class="number">-1</span>,<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i :=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> cur &lt; points[i][<span class="number">0</span>]&#123;</span><br><span class="line">            ans++</span><br><span class="line">            cur = points[i][<span class="number">0</span>]+w</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3111.覆盖所有点的最少矩形数目&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-30</title>
    <link href="https://perseisqaq.github.io/2024/07/30/36/"/>
    <id>https://perseisqaq.github.io/2024/07/30/36/</id>
    <published>2024-07-29T16:44:36.000Z</published>
    <updated>2024-07-29T16:44:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>2961.双模幂运算</p><span id="more"></span><p><a href="https://leetcode.cn/problems/double-modular-exponentiation/description/?envType=daily-question&amp;envId=2024-07-30">https://leetcode.cn/problems/double-modular-exponentiation/description/?envType=daily-question&amp;envId=2024-07-30</a></p><p>给你一个下标从<strong>0</strong>开始的二维数组<code>variables</code>，其中<code>variables[i] = [ai, bi, ci, mi]</code>，以及一个整数<code>target</code>。</p><p>如果满足以下公式，则下标 i 是 好下标：</p><ul><li><code>0 &lt;= i &lt; variables.length</code></li><li><code>((aibi % 10)ci) % mi == target</code></li></ul><p>返回一个由<strong>好下标</strong>组成的数组，<strong>顺序不限</strong>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>快速幂板子题</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ksm</span><span class="params">(x,y,mod <span class="type">int</span>)</span></span><span class="type">int</span>&#123;</span><br><span class="line">    res := <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> y&gt;<span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> y%<span class="number">2</span>==<span class="number">1</span>&#123;</span><br><span class="line">            res = (res * x) % mod</span><br><span class="line">        &#125;</span><br><span class="line">        y/=<span class="number">2</span></span><br><span class="line">        x = (x * x) % mod</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getGoodIndices</span><span class="params">(variables [][]<span class="type">int</span>, target <span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(variables)</span><br><span class="line">    <span class="keyword">var</span> ans []<span class="type">int</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        tmp := ksm(variables[i][<span class="number">0</span>],variables[i][<span class="number">1</span>],<span class="number">10</span>)</span><br><span class="line">        tmp = ksm(tmp,variables[i][<span class="number">2</span>],variables[i][<span class="number">3</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> tmp == target&#123;</span><br><span class="line">            ans = <span class="built_in">append</span>(ans,i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;2961.双模幂运算&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-29</title>
    <link href="https://perseisqaq.github.io/2024/07/29/25/"/>
    <id>https://perseisqaq.github.io/2024/07/29/25/</id>
    <published>2024-07-28T17:09:25.000Z</published>
    <updated>2024-07-28T17:09:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>682.棒球比赛</p><span id="more"></span><p><a href="https://leetcode.cn/problems/baseball-game/?envType=daily-question&amp;envId=2024-07-29">https://leetcode.cn/problems/baseball-game/?envType=daily-question&amp;envId=2024-07-29</a></p><p>你现在是一场采用特殊赛制棒球比赛的记录员。这场比赛由若干回合组成，过去几回合的得分可能会影响以后几回合的得分。</p><p>比赛开始时，记录是空白的。你会得到一个记录操作的字符串列表<code>ops</code>，其中<code>ops[i]</code>是你需要记录的第 i 项操作，ops 遵循下述规则：</p><ol><li>整数 <code>x</code> - 表示本回合新获得分数 x</li><li><code>&quot;+&quot;</code> - 表示本回合新获得的得分是前两次得分的总和。题目数据保证记录此操作时前面总是存在两个有效的分数。</li><li><code>&quot;D&quot;</code>  - 表示本回合新获得的得分是前一次得分的两倍。题目数据保证记录此操作时前面总是存在一个有效的分数。</li><li><code>&quot;C&quot;</code>  - 表示前一次得分无效，将其从记录中移除。题目数据保证记录此操作时前面总是存在一个有效的分数。<br>请你返回记录中所有得分的总和。</li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>纯模拟（</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; tmp;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">calPoints</span><span class="params">(vector&lt;string&gt;&amp; operations)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = operations.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (operations[i] == <span class="string">&quot;+&quot;</span>) &#123;</span><br><span class="line">                <span class="type">int</span> x = tmp[tmp.<span class="built_in">size</span>() - <span class="number">1</span>] + tmp[tmp.<span class="built_in">size</span>() - <span class="number">2</span>];</span><br><span class="line">                tmp.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (operations[i] == <span class="string">&quot;D&quot;</span>) &#123;</span><br><span class="line">                <span class="type">int</span> x = <span class="number">2</span> * tmp[tmp.<span class="built_in">size</span>() - <span class="number">1</span>];</span><br><span class="line">                tmp.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (operations[i] == <span class="string">&quot;C&quot;</span>)</span><br><span class="line">                tmp.<span class="built_in">pop_back</span>();</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> x = <span class="built_in">stoi</span>(operations[i]);</span><br><span class="line">                tmp.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tmp.<span class="built_in">size</span>(); i++)</span><br><span class="line">            sum += tmp[i];</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;682.棒球比赛&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-28</title>
    <link href="https://perseisqaq.github.io/2024/07/28/01/"/>
    <id>https://perseisqaq.github.io/2024/07/28/01/</id>
    <published>2024-07-28T11:26:01.000Z</published>
    <updated>2024-07-28T11:26:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>699.掉落的方块</p><span id="more"></span><p><a href="https://leetcode.cn/problems/falling-squares/description/?envType=daily-question&amp;envId=2024-07-28">https://leetcode.cn/problems/falling-squares/description/?envType=daily-question&amp;envId=2024-07-28</a></p><p>在二维平面上的 x 轴上，放置着一些方块。</p><p>给你一个二维整数数组<code>positions</code>，其中<code>positions[i] = [lefti, sideLengthi]</code>表示：第<code>i</code>个方块边长为<code>sideLengthi</code>，其左侧边与 x 轴上坐标点<code>lefti</code>对齐。</p><p>每个方块都从一个比目前所有的落地方块更高的高度掉落而下。方块沿 y 轴负方向下落，直到着陆到<strong>另一个正方形的顶边</strong>或者是<strong>x 轴上</strong>。一个方块仅仅是擦过另一个方块的左侧边或右侧边不算着陆。一旦着陆，它就会固定在原地，无法移动。</p><p>在每个方块掉落后，你必须记录目前所有已经落稳的<strong>方块堆叠的最高高度</strong>。</p><p>返回一个整数数组<code>ans</code>，其中<code>ans[i]</code>表示在第<code>i</code>块方块掉落后堆叠的最高高度。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>题目涉及区间修改与查询 -&gt; 线段树<br>线段树数组开4n，数据范围太大 -&gt; 离散化<br>边界处理 -&gt; 化线为点</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">        <span class="type">int</span> l,r,maxn,del;</span><br><span class="line">    &#125;a[<span class="number">8010</span>];</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;f;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">2010</span>],idx=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">        a[p].l = l,a[p].r = r;</span><br><span class="line">        <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">build</span>(p&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">        <span class="built_in">build</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[p].del)&#123;</span><br><span class="line">            a[p*<span class="number">2</span>].maxn = a[p].del;</span><br><span class="line">            a[p*<span class="number">2</span><span class="number">+1</span>].maxn = a[p].del;</span><br><span class="line">            a[p*<span class="number">2</span>].del = a[p].del;</span><br><span class="line">            a[p*<span class="number">2</span><span class="number">+1</span>].del = a[p].del;</span><br><span class="line">            a[p].del = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p].l == l &amp;&amp; a[p].r == r) <span class="keyword">return</span> a[p].maxn;</span><br><span class="line">        <span class="built_in">pushdown</span>(p);</span><br><span class="line">        <span class="type">int</span> mid = (a[p].l+a[p].r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=mid) <span class="keyword">return</span> <span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid) <span class="keyword">return</span> <span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p].l==l&amp;&amp;a[p].r==r)&#123;</span><br><span class="line">            a[p].maxn = <span class="built_in">max</span>(a[p].del,d);</span><br><span class="line">            a[p].del = a[p].maxn;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">pushdown</span>(p);</span><br><span class="line">        <span class="type">int</span> mid = (a[p].l+a[p].r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=mid) <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>,l,r,d);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid) <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r,d);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>,l,mid,d);</span><br><span class="line">            <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r,d);</span><br><span class="line">        &#125;</span><br><span class="line">        a[p].maxn = <span class="built_in">max</span>(a[p&lt;&lt;<span class="number">1</span>].maxn,a[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].maxn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">fallingSquares</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; positions)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = positions.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            b[i*<span class="number">2</span>] = positions[i][<span class="number">0</span>]<span class="number">+1</span>;</span><br><span class="line">            b[i*<span class="number">2</span><span class="number">+1</span>] =positions[i][<span class="number">0</span>]+positions[i][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(b,b<span class="number">+2</span>*n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++) <span class="keyword">if</span>(!f[b[i]]) f[b[i]] = ++idx;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;ans;</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,idx<span class="number">+1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> l = f[positions[i][<span class="number">0</span>]<span class="number">+1</span>];</span><br><span class="line">            <span class="type">int</span> r = f[positions[i][<span class="number">1</span>]+positions[i][<span class="number">0</span>]];</span><br><span class="line">            <span class="type">int</span> tmp = <span class="built_in">query</span>(<span class="number">1</span>,l,r);</span><br><span class="line">            tmp += positions[i][<span class="number">1</span>];</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,l,r,tmp);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="built_in">query</span>(<span class="number">1</span>,<span class="number">1</span>,idx<span class="number">+1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;699.掉落的方块&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-14</title>
    <link href="https://perseisqaq.github.io/2024/07/14/48/"/>
    <id>https://perseisqaq.github.io/2024/07/14/48/</id>
    <published>2024-07-13T17:02:48.000Z</published>
    <updated>2024-07-13T17:02:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>807.保持城市天际线</p><span id="more"></span><p><a href="https://leetcode.cn/problems/max-increase-to-keep-city-skyline/description/?envType=daily-question&amp;envId=2024-07-14">https://leetcode.cn/problems/max-increase-to-keep-city-skyline/description/?envType=daily-question&amp;envId=2024-07-14</a></p><p>给你一座由<code>n x n</code>个街区组成的城市，每个街区都包含一座立方体建筑。给你一个下标从<strong>0</strong>开始的<code>n x n</code>整数矩阵 <code>grid</code>，其中<code>grid[r][c]</code>表示坐落于<code>r</code>行<code>c</code>列的建筑物的<strong>高度</strong>。</p><p>城市的<strong>天际线</strong>是从远处观察城市时，所有建筑物形成的外部轮廓。从东、南、西、北四个主要方向观测到的<strong>天际线</strong>可能不同。</p><p>我们被允许为<strong>任意数量的建筑物</strong>的高度增加<strong>任意增量（不同建筑物的增量可能不同）</strong>。 高度为 0 的建筑物的高度也可以增加。然而，增加的建筑物高度<strong>不能影响</strong>从任何主要方向观察城市得到的<strong>天际线</strong>。</p><p>在<strong>不改变</strong>从任何主要方向观测到的城市 天际线 的前提下，返回建筑物可以增加的<strong>最大高度增量总和</strong>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一个建筑的高度只受其所在行和所在列的最高建筑影响。<br>只要这个建筑的高度没有超过其所在行与所在列最高建筑，那么就不会影响到天际线。<br>记录每行每列建筑最高值并与每个建筑做差，求和即可得到答案。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxIncreaseKeepingSkyline</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    n,ans := <span class="built_in">len</span>(grid),<span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">make</span>([]<span class="type">int</span>,n)</span><br><span class="line">    <span class="keyword">var</span> c = <span class="built_in">make</span>([]<span class="type">int</span>,n)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">0</span>;j&lt;n;j++&#123;</span><br><span class="line">            r[i] = max(r[i],grid[i][j])</span><br><span class="line">            c[j] = max(c[j],grid[i][j])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">0</span>;j&lt;n;j++&#123;</span><br><span class="line">            ans += min(r[i],c[j]) - grid[i][j]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;807.保持城市天际线&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-13</title>
    <link href="https://perseisqaq.github.io/2024/07/13/11/"/>
    <id>https://perseisqaq.github.io/2024/07/13/11/</id>
    <published>2024-07-12T16:26:11.000Z</published>
    <updated>2024-07-12T16:26:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3011.判断一个数组是否可以变为有序</p><span id="more"></span><p><a href="https://leetcode.cn/problems/find-if-array-can-be-sorted/description/?envType=daily-question&amp;envId=2024-07-13">https://leetcode.cn/problems/find-if-array-can-be-sorted/description/?envType=daily-question&amp;envId=2024-07-13</a></p><p>给你一个下标从<strong>0</strong>开始且全是<strong>正</strong>整数的数组 nums 。</p><p>一次<strong>操作</strong>中，如果两个<strong>相邻</strong>元素在二进制下数位为<strong>1</strong>的数目<strong>相同</strong>，那么你可以将这两个元素交换。你可以执行这个操作<strong>任意次 （也可以 0 次）</strong>。</p><p>如果你可以使数组变有序，请你返回<code>true</code>，否则返回<code>false</code>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>因为一个数只能与相邻的，二进制下1的个数相同的数交换，所以我们可以把整个数组分为若干个部分，每个部分内的数二进制下1的个数相同。<br>由题意可知，每个部分之间的相互顺序不可更换<br>我们再对这m个部分分别进行排序。<br>最后遍历一遍数组，如果仍然出现顺序不正确的情况，说明无法使数组变有序。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">count</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span>&#123;</span><br><span class="line">    cnt := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x&gt;<span class="number">0</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> x &amp; <span class="number">1</span> != <span class="number">0</span>&#123;</span><br><span class="line">            cnt ++</span><br><span class="line">        &#125;</span><br><span class="line">        x &gt;&gt;= <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quick_sort</span><span class="params">(nums []<span class="type">int</span>, l,r <span class="type">int</span>)</span></span>&#123;</span><br><span class="line">    x,i,j := nums[(l+r)/<span class="number">2</span>],l,r</span><br><span class="line">    <span class="keyword">for</span> i&lt;=j&#123;</span><br><span class="line">        <span class="keyword">for</span> nums[i]&lt;x&#123;</span><br><span class="line">            i++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> nums[j]&gt;x&#123;</span><br><span class="line">            j--</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i&lt;=j &#123;</span><br><span class="line">            nums[i],nums[j] = nums[j],nums[i]</span><br><span class="line">            i++</span><br><span class="line">            j--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> l&lt;j &#123;</span><br><span class="line">        quick_sort(nums,l,j)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> i&lt;r &#123;</span><br><span class="line">        quick_sort(nums,i,r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canSortArray</span><span class="params">(nums []<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    n,l := <span class="built_in">len</span>(nums),<span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> cnt = <span class="built_in">make</span>([]<span class="type">int</span> ,n)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        cnt[i] = count(nums[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> cnt[i]!=cnt[i<span class="number">-1</span>]&#123;</span><br><span class="line">            quick_sort(nums,l,i<span class="number">-1</span>)</span><br><span class="line">            l = i</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(nums,l,n<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> nums[i]&lt;nums[i<span class="number">-1</span>]&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3011.判断一个数组是否可以变为有序&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-12</title>
    <link href="https://perseisqaq.github.io/2024/07/12/07/"/>
    <id>https://perseisqaq.github.io/2024/07/12/07/</id>
    <published>2024-07-11T16:34:07.000Z</published>
    <updated>2024-07-11T16:34:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>2974.最小数字游戏</p><span id="more"></span><p><a href="https://leetcode.cn/problems/minimum-number-game/description/?envType=daily-question&amp;envId=2024-07-12">https://leetcode.cn/problems/minimum-number-game/description/?envType=daily-question&amp;envId=2024-07-12</a></p><p>你有一个下标从<strong>0</strong>开始、长度为<strong>偶数</strong>的整数数组<code>nums</code>，同时还有一个空数组<code>arr</code>。Alice 和 Bob 决定玩一个游戏，游戏中每一轮 Alice 和 Bob 都会各自执行一次操作。游戏规则如下：</p><ul><li>每一轮，Alice 先从<code>nums</code>中移除一个<strong>最小</strong>元素，然后 Bob 执行同样的操作。</li><li>接着，Bob 会将移除的元素添加到数组<code>arr</code>中，然后 Alice 也执行同样的操作。</li><li>游戏持续进行，直到<code>nums</code>变为空。<br>返回结果数组<code>arr</code>。</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>将数组从小到大排序后两两分组，对于每一个单独的分组，先将后面的数放入<code>arr</code>数组，再将前面的数放入<code>arr</code>数组。<br>也就是说放入的下标顺序是 1 0 3 2 5 4……<br>写一个for循环，步长为2，循环放入即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numberGame</span><span class="params">(nums []<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(nums)</span><br><span class="line">    sort.Ints(nums)</span><br><span class="line">    <span class="keyword">var</span> arr []<span class="type">int</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i += <span class="number">2</span> &#123;</span><br><span class="line">        arr = <span class="built_in">append</span>(arr, nums[i])</span><br><span class="line">        arr = <span class="built_in">append</span>(arr, nums[i<span class="number">-1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;2974.最小数字游戏&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Git学习笔记</title>
    <link href="https://perseisqaq.github.io/2024/07/07/36/"/>
    <id>https://perseisqaq.github.io/2024/07/07/36/</id>
    <published>2024-07-07T04:36:36.000Z</published>
    <updated>2024-07-07T04:36:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>本学习笔记基于b站黑马程序员Git教程<a href="https://www.bilibili.com/video/BV1MU4y1Y7h5/">https://www.bilibili.com/video/BV1MU4y1Y7h5/</a></p><span id="more"></span><h2 id="Git下载与安装"><a href="#Git下载与安装" class="headerlink" title="Git下载与安装"></a>Git下载与安装</h2><p><a href="https://git-scm.com/">https://git-scm.com/</a> 在这里下载安装</p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><h4 id="设置用户信息"><a href="#设置用户信息" class="headerlink" title="设置用户信息"></a>设置用户信息</h4><ol><li>设置用户名 <code>git config --global user.name &quot;yourname&quot;</code><br>双引号内为用户名</li><li>设置邮箱 <code>git config --global user.email &quot;youremail&quot;</code><br>双引号内为邮箱</li></ol><h4 id="为常用命令配置别名"><a href="#为常用命令配置别名" class="headerlink" title="为常用命令配置别名"></a>为常用命令配置别名</h4><ol><li>在用户目录下，创建 .bashrc 文件<br>可以打开GitBash 执行 <code>touch ~/.bashrc</code></li><li>在 .bashrc 中输入:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看git提交日志</span></span><br><span class="line"><span class="built_in">alias</span> git-log=<span class="string">&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span></span><br><span class="line"><span class="comment"># 输出当前目录所有文件与基本信息</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -al&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="配置本地仓库"><a href="#配置本地仓库" class="headerlink" title="配置本地仓库"></a>配置本地仓库</h3><ol><li>创建一个空目录作为本地Git仓库</li><li>在目录里右键打开 Git bash</li><li>执行命令 <code>git init</code></li><li>创建成功后目录里会有一个.git目录</li></ol><h2 id="Git常用指令"><a href="#Git常用指令" class="headerlink" title="Git常用指令"></a>Git常用指令</h2><h3 id="文件状态转换"><a href="#文件状态转换" class="headerlink" title="文件状态转换"></a>文件状态转换</h3><ol><li>使用 git add 命令 工作区 -&gt; 暂存区</li><li>使用 git commit 命令 暂存区 -&gt; 本地仓库</li></ol><h3 id="查看修改的状态"><a href="#查看修改的状态" class="headerlink" title="查看修改的状态"></a>查看修改的状态</h3><ul><li>执行命令 <code>git status</code></li></ul><h3 id="提交工作区到暂存区"><a href="#提交工作区到暂存区" class="headerlink" title="提交工作区到暂存区"></a>提交工作区到暂存区</h3><ol><li>执行命令 <code>git add .</code></li><li>如果有想要忽略的文件，创建一个 .gitignore 文件，将文件名写在里面</li></ol><h3 id="提交暂存区到本地仓库"><a href="#提交暂存区到本地仓库" class="headerlink" title="提交暂存区到本地仓库"></a>提交暂存区到本地仓库</h3><ul><li>执行命令 <code>git commit -m &quot; &quot;</code> 双引号内是你的commit内容</li></ul><h3 id="查看提交日志"><a href="#查看提交日志" class="headerlink" title="查看提交日志"></a>查看提交日志</h3><ul><li>执行命令 <code>git log [options]</code>（前面配置的）<ul><li>options包含：<ul><li><code>--all</code> 显示所有分支</li><li><code>--pretty=oneline</code> 提交信息显示为一行</li><li><code>--abbrev-commit</code> 使输出的commitid更简洁</li><li><code>--graph</code> 以图的形式显示</li></ul></li></ul></li><li>如果要查看已经删除的提交记录，执行命令 <code>git reflog</code></li></ul><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><ul><li>执行命令 <code>git reset --hard &quot;commitid&quot;</code> commitid可以在log中查看</li></ul><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><h3 id="查看本地分支"><a href="#查看本地分支" class="headerlink" title="查看本地分支"></a>查看本地分支</h3><ul><li>执行命令 <code>git branch</code></li></ul><h3 id="创建本地分支"><a href="#创建本地分支" class="headerlink" title="创建本地分支"></a>创建本地分支</h3><ul><li>执行命令 <code>git branch branchname</code> branchname为分支名</li></ul><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><ul><li>执行命令 <code>git checkout branchname</code></li><li>如果想要切换到一个不存在的分支（切换的同时创建分支），执行命令 <code>git checkout -b branchname</code></li></ul><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><ol><li>切换到目标分支</li><li>执行命令 <code>git merge branchname</code></li></ol><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p>只能删除当前分支以外的分支</p><ul><li><code>git branch -d branchname</code> 删除分支事，需要做各种检查</li><li><code>git branch -D branchname</code> 不做任何检查，强制删除分支</li></ul><h3 id="分支重命名"><a href="#分支重命名" class="headerlink" title="分支重命名"></a>分支重命名</h3><ul><li>执行命令 <code>git branch -m oldname newname</code></li></ul><h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>两个分支对文件的修改存在冲突（如同时修改了同一文件的同一行），就要手动解决冲突</p><ol><li>处理文件中冲突的地方</li><li>提交到缓存区</li><li>提交到仓库（不用加-m）</li></ol><h2 id="Git远程仓库"><a href="#Git远程仓库" class="headerlink" title="Git远程仓库"></a>Git远程仓库</h2><p>这里选择了github</p><h3 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h3><ul><li>查询用户主目录下是否存在.ssh文件，里面是否有id_rsa与id_rsa.pub这两个文件<ul><li>如果没有，在开始菜单中找到GitBash，输入 <code>ssh-keygen -t rsa -C &quot;your_email&quot;</code> <strong>双引号内为github注册使用的邮箱</strong></li></ul></li></ul><h3 id="github填写SSH-Key"><a href="#github填写SSH-Key" class="headerlink" title="github填写SSH Key"></a>github填写SSH Key</h3><ol><li>点击右上角头像，打开“Settings”-“Account settings”-“SSH Keys”页面</li><li>点击“New SSH Key”</li><li>在Key里填写id_rsa.pub的内容</li></ol><h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><ul><li><p>在GitBash里输入 <code>ssh -T git@github.com</code><br>第一次设置需要输入yes，如果出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxx! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>则为成功</p></li></ul><h3 id="在github建仓库"><a href="#在github建仓库" class="headerlink" title="在github建仓库"></a>在github建仓库</h3><ul><li>建一个仓库用来存放项目</li></ul><h3 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h3><p>有两种可选方法</p><h4 id="clone仓库地址到本地"><a href="#clone仓库地址到本地" class="headerlink" title="clone仓库地址到本地"></a>clone仓库地址到本地</h4><p>这种方法可以实现一个仓库存放多个不同的代码</p><ol><li>在&lt;&gt;Code那里复制地址</li><li>clone到本地 （可以修改名称），<strong>记得改成自己仓库的地址（</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/PerseisQAQ/projects.git</span><br></pre></td></tr></table></figure><p>在文件夹的内部可以创建多个不同的文件夹，不同的文件夹放置不同的项目代码。这样就可以实现很多不同的项目代码放置到同一个代码仓库中</p><h4 id="关联远程仓库到本地仓库"><a href="#关联远程仓库到本地仓库" class="headerlink" title="关联远程仓库到本地仓库"></a>关联远程仓库到本地仓库</h4><ul><li>根据仓库地址，在本地仓库的命令行输入，<strong>记得改成自己仓库的地址（</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/PerseisQAQ/projects.git</span><br></pre></td></tr></table></figure><h3 id="本地内容上传"><a href="#本地内容上传" class="headerlink" title="本地内容上传"></a>本地内容上传</h3><p>关联好仓库后就可以把本地仓库的内容推送到远程仓库了，在GitBash输入</p><ul><li>如果新建的远程仓库是空的</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><ul><li>如果远程仓库非空</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="从远程仓库抓取与拉取"><a href="#从远程仓库抓取与拉取" class="headerlink" title="从远程仓库抓取与拉取"></a>从远程仓库抓取与拉取</h3><ul><li>抓取命令 <code>get fetch [远端名称][分支名]</code><ul><li>将仓库里的更新都抓取到本地，不进行合并</li><li>如果不指定远端名称和分支名，则抓取所有分支</li></ul></li><li>拉取命令 <code>git pull [远端名称][分支名]</code><ul><li>将仓库里的更新拉到本地并自动进行合并（fetch+merge）</li><li>如果不指定远端名称和分支名，则抓取所有并更新当前分支</li></ul></li></ul><h3 id="远程解决冲突"><a href="#远程解决冲突" class="headerlink" title="远程解决冲突"></a>远程解决冲突</h3><ul><li>push之前先pull一下，看看有没有冲突，有冲突在本地解决掉再push</li></ul><h2 id="记录一下遇到的奇怪问题们"><a href="#记录一下遇到的奇怪问题们" class="headerlink" title="记录一下遇到的奇怪问题们"></a>记录一下遇到的奇怪问题们</h2><h3 id="clone到本地仓库时"><a href="#clone到本地仓库时" class="headerlink" title="clone到本地仓库时"></a>clone到本地仓库时</h3><h4 id="端口443连接失败"><a href="#端口443连接失败" class="headerlink" title="端口443连接失败"></a>端口443连接失败</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to connect to github.com port 443 after 21271 ms: Couldn&#x27;t connect to server</span><br></pre></td></tr></table></figure><ul><li>原因：正在使用VPN，VPN的使用可能会改变本机的系统端口号，从而影响到Git的正常连接</li><li>解决方法：</li></ul><ol><li>打开“设置 -&gt; 网络和Internet -&gt; 代理”，记录下当前的端口号</li><li>设置Git端口号，<strong>假设当前端口号为7890</strong>，使用命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy 127.0.0.1:7890</span><br><span class="line">git config --global https.proxy 127.0.0.1:7890</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本学习笔记基于b站黑马程序员Git教程&lt;a href=&quot;https://www.bilibili.com/video/BV1MU4y1Y7h5/&quot;&gt;https://www.bilibili.com/video/BV1MU4y1Y7h5/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="学习" scheme="https://perseisqaq.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
