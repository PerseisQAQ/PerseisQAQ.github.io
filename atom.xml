<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PerseisQAQ&#39;s blog</title>
  
  
  <link href="https://perseisqaq.github.io/atom.xml" rel="self"/>
  
  <link href="https://perseisqaq.github.io/"/>
  <updated>2024-07-29T16:44:36.000Z</updated>
  <id>https://perseisqaq.github.io/</id>
  
  <author>
    <name>PerseisQAQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>力扣每日一题2024-07-30</title>
    <link href="https://perseisqaq.github.io/2024/07/30/36/"/>
    <id>https://perseisqaq.github.io/2024/07/30/36/</id>
    <published>2024-07-29T16:44:36.000Z</published>
    <updated>2024-07-29T16:44:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>2961.双模幂运算</p><span id="more"></span><p><a href="https://leetcode.cn/problems/double-modular-exponentiation/description/?envType=daily-question&amp;envId=2024-07-30">https://leetcode.cn/problems/double-modular-exponentiation/description/?envType=daily-question&amp;envId=2024-07-30</a></p><p>给你一个下标从<strong>0</strong>开始的二维数组<code>variables</code>，其中<code>variables[i] = [ai, bi, ci, mi]</code>，以及一个整数<code>target</code>。</p><p>如果满足以下公式，则下标 i 是 好下标：</p><ul><li><code>0 &lt;= i &lt; variables.length</code></li><li><code>((aibi % 10)ci) % mi == target</code></li></ul><p>返回一个由<strong>好下标</strong>组成的数组，<strong>顺序不限</strong>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>快速幂板子题</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ksm</span><span class="params">(x,y,mod <span class="type">int</span>)</span></span><span class="type">int</span>&#123;</span><br><span class="line">    res := <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> y&gt;<span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> y%<span class="number">2</span>==<span class="number">1</span>&#123;</span><br><span class="line">            res = (res * x) % mod</span><br><span class="line">        &#125;</span><br><span class="line">        y/=<span class="number">2</span></span><br><span class="line">        x = (x * x) % mod</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getGoodIndices</span><span class="params">(variables [][]<span class="type">int</span>, target <span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(variables)</span><br><span class="line">    <span class="keyword">var</span> ans []<span class="type">int</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        tmp := ksm(variables[i][<span class="number">0</span>],variables[i][<span class="number">1</span>],<span class="number">10</span>)</span><br><span class="line">        tmp = ksm(tmp,variables[i][<span class="number">2</span>],variables[i][<span class="number">3</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> tmp == target&#123;</span><br><span class="line">            ans = <span class="built_in">append</span>(ans,i)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;2961.双模幂运算&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-29</title>
    <link href="https://perseisqaq.github.io/2024/07/29/25/"/>
    <id>https://perseisqaq.github.io/2024/07/29/25/</id>
    <published>2024-07-28T17:09:25.000Z</published>
    <updated>2024-07-28T17:09:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>682.棒球比赛</p><span id="more"></span><p><a href="https://leetcode.cn/problems/baseball-game/?envType=daily-question&amp;envId=2024-07-29">https://leetcode.cn/problems/baseball-game/?envType=daily-question&amp;envId=2024-07-29</a></p><p>你现在是一场采用特殊赛制棒球比赛的记录员。这场比赛由若干回合组成，过去几回合的得分可能会影响以后几回合的得分。</p><p>比赛开始时，记录是空白的。你会得到一个记录操作的字符串列表<code>ops</code>，其中<code>ops[i]</code>是你需要记录的第 i 项操作，ops 遵循下述规则：</p><ol><li>整数 <code>x</code> - 表示本回合新获得分数 x</li><li><code>&quot;+&quot;</code> - 表示本回合新获得的得分是前两次得分的总和。题目数据保证记录此操作时前面总是存在两个有效的分数。</li><li><code>&quot;D&quot;</code>  - 表示本回合新获得的得分是前一次得分的两倍。题目数据保证记录此操作时前面总是存在一个有效的分数。</li><li><code>&quot;C&quot;</code>  - 表示前一次得分无效，将其从记录中移除。题目数据保证记录此操作时前面总是存在一个有效的分数。<br>请你返回记录中所有得分的总和。</li></ol><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>纯模拟（</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; tmp;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">calPoints</span><span class="params">(vector&lt;string&gt;&amp; operations)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = operations.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (operations[i] == <span class="string">&quot;+&quot;</span>) &#123;</span><br><span class="line">                <span class="type">int</span> x = tmp[tmp.<span class="built_in">size</span>() - <span class="number">1</span>] + tmp[tmp.<span class="built_in">size</span>() - <span class="number">2</span>];</span><br><span class="line">                tmp.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (operations[i] == <span class="string">&quot;D&quot;</span>) &#123;</span><br><span class="line">                <span class="type">int</span> x = <span class="number">2</span> * tmp[tmp.<span class="built_in">size</span>() - <span class="number">1</span>];</span><br><span class="line">                tmp.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (operations[i] == <span class="string">&quot;C&quot;</span>)</span><br><span class="line">                tmp.<span class="built_in">pop_back</span>();</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> x = <span class="built_in">stoi</span>(operations[i]);</span><br><span class="line">                tmp.<span class="built_in">push_back</span>(x);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tmp.<span class="built_in">size</span>(); i++)</span><br><span class="line">            sum += tmp[i];</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;682.棒球比赛&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-28</title>
    <link href="https://perseisqaq.github.io/2024/07/28/01/"/>
    <id>https://perseisqaq.github.io/2024/07/28/01/</id>
    <published>2024-07-28T11:26:01.000Z</published>
    <updated>2024-07-28T11:26:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>699.掉落的方块</p><span id="more"></span><p><a href="https://leetcode.cn/problems/falling-squares/description/?envType=daily-question&amp;envId=2024-07-28">https://leetcode.cn/problems/falling-squares/description/?envType=daily-question&amp;envId=2024-07-28</a></p><p>在二维平面上的 x 轴上，放置着一些方块。</p><p>给你一个二维整数数组<code>positions</code>，其中<code>positions[i] = [lefti, sideLengthi]</code>表示：第<code>i</code>个方块边长为<code>sideLengthi</code>，其左侧边与 x 轴上坐标点<code>lefti</code>对齐。</p><p>每个方块都从一个比目前所有的落地方块更高的高度掉落而下。方块沿 y 轴负方向下落，直到着陆到<strong>另一个正方形的顶边</strong>或者是<strong>x 轴上</strong>。一个方块仅仅是擦过另一个方块的左侧边或右侧边不算着陆。一旦着陆，它就会固定在原地，无法移动。</p><p>在每个方块掉落后，你必须记录目前所有已经落稳的<strong>方块堆叠的最高高度</strong>。</p><p>返回一个整数数组<code>ans</code>，其中<code>ans[i]</code>表示在第<code>i</code>块方块掉落后堆叠的最高高度。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>题目涉及区间修改与查询 -&gt; 线段树<br>线段树数组开4n，数据范围太大 -&gt; 离散化<br>边界处理 -&gt; 化线为点</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">        <span class="type">int</span> l,r,maxn,del;</span><br><span class="line">    &#125;a[<span class="number">8010</span>];</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;f;</span><br><span class="line">    <span class="type">int</span> b[<span class="number">2010</span>],idx=<span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">        a[p].l = l,a[p].r = r;</span><br><span class="line">        <span class="keyword">if</span>(l==r) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> mid = (l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="built_in">build</span>(p&lt;&lt;<span class="number">1</span>,l,mid);</span><br><span class="line">        <span class="built_in">build</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">pushdown</span><span class="params">(<span class="type">int</span> p)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a[p].del)&#123;</span><br><span class="line">            a[p*<span class="number">2</span>].maxn = a[p].del;</span><br><span class="line">            a[p*<span class="number">2</span><span class="number">+1</span>].maxn = a[p].del;</span><br><span class="line">            a[p*<span class="number">2</span>].del = a[p].del;</span><br><span class="line">            a[p*<span class="number">2</span><span class="number">+1</span>].del = a[p].del;</span><br><span class="line">            a[p].del = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p].l == l &amp;&amp; a[p].r == r) <span class="keyword">return</span> a[p].maxn;</span><br><span class="line">        <span class="built_in">pushdown</span>(p);</span><br><span class="line">        <span class="type">int</span> mid = (a[p].l+a[p].r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=mid) <span class="keyword">return</span> <span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid) <span class="keyword">return</span> <span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>,l,mid),<span class="built_in">query</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> p,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> d)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[p].l==l&amp;&amp;a[p].r==r)&#123;</span><br><span class="line">            a[p].maxn = <span class="built_in">max</span>(a[p].del,d);</span><br><span class="line">            a[p].del = a[p].maxn;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">pushdown</span>(p);</span><br><span class="line">        <span class="type">int</span> mid = (a[p].l+a[p].r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(r&lt;=mid) <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>,l,r,d);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(l&gt;mid) <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r,d);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>,l,mid,d);</span><br><span class="line">            <span class="built_in">update</span>(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid<span class="number">+1</span>,r,d);</span><br><span class="line">        &#125;</span><br><span class="line">        a[p].maxn = <span class="built_in">max</span>(a[p&lt;&lt;<span class="number">1</span>].maxn,a[p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].maxn);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">fallingSquares</span><span class="params">(vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&amp; positions)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = positions.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            b[i*<span class="number">2</span>] = positions[i][<span class="number">0</span>]<span class="number">+1</span>;</span><br><span class="line">            b[i*<span class="number">2</span><span class="number">+1</span>] =positions[i][<span class="number">0</span>]+positions[i][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(b,b<span class="number">+2</span>*n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++) <span class="keyword">if</span>(!f[b[i]]) f[b[i]] = ++idx;</span><br><span class="line">        vector&lt;<span class="type">int</span>&gt;ans;</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,idx<span class="number">+1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> l = f[positions[i][<span class="number">0</span>]<span class="number">+1</span>];</span><br><span class="line">            <span class="type">int</span> r = f[positions[i][<span class="number">1</span>]+positions[i][<span class="number">0</span>]];</span><br><span class="line">            <span class="type">int</span> tmp = <span class="built_in">query</span>(<span class="number">1</span>,l,r);</span><br><span class="line">            tmp += positions[i][<span class="number">1</span>];</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>,l,r,tmp);</span><br><span class="line">            ans.<span class="built_in">push_back</span>(<span class="built_in">query</span>(<span class="number">1</span>,<span class="number">1</span>,idx<span class="number">+1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;699.掉落的方块&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-14</title>
    <link href="https://perseisqaq.github.io/2024/07/14/48/"/>
    <id>https://perseisqaq.github.io/2024/07/14/48/</id>
    <published>2024-07-13T17:02:48.000Z</published>
    <updated>2024-07-13T17:02:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>807.保持城市天际线</p><span id="more"></span><p><a href="https://leetcode.cn/problems/max-increase-to-keep-city-skyline/description/?envType=daily-question&amp;envId=2024-07-14">https://leetcode.cn/problems/max-increase-to-keep-city-skyline/description/?envType=daily-question&amp;envId=2024-07-14</a></p><p>给你一座由<code>n x n</code>个街区组成的城市，每个街区都包含一座立方体建筑。给你一个下标从<strong>0</strong>开始的<code>n x n</code>整数矩阵 <code>grid</code>，其中<code>grid[r][c]</code>表示坐落于<code>r</code>行<code>c</code>列的建筑物的<strong>高度</strong>。</p><p>城市的<strong>天际线</strong>是从远处观察城市时，所有建筑物形成的外部轮廓。从东、南、西、北四个主要方向观测到的<strong>天际线</strong>可能不同。</p><p>我们被允许为<strong>任意数量的建筑物</strong>的高度增加<strong>任意增量（不同建筑物的增量可能不同）</strong>。 高度为 0 的建筑物的高度也可以增加。然而，增加的建筑物高度<strong>不能影响</strong>从任何主要方向观察城市得到的<strong>天际线</strong>。</p><p>在<strong>不改变</strong>从任何主要方向观测到的城市 天际线 的前提下，返回建筑物可以增加的<strong>最大高度增量总和</strong>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一个建筑的高度只受其所在行和所在列的最高建筑影响。<br>只要这个建筑的高度没有超过其所在行与所在列最高建筑，那么就不会影响到天际线。<br>记录每行每列建筑最高值并与每个建筑做差，求和即可得到答案。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxIncreaseKeepingSkyline</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    n,ans := <span class="built_in">len</span>(grid),<span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">make</span>([]<span class="type">int</span>,n)</span><br><span class="line">    <span class="keyword">var</span> c = <span class="built_in">make</span>([]<span class="type">int</span>,n)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">0</span>;j&lt;n;j++&#123;</span><br><span class="line">            r[i] = max(r[i],grid[i][j])</span><br><span class="line">            c[j] = max(c[j],grid[i][j])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">for</span> j:=<span class="number">0</span>;j&lt;n;j++&#123;</span><br><span class="line">            ans += min(r[i],c[j]) - grid[i][j]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;807.保持城市天际线&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-13</title>
    <link href="https://perseisqaq.github.io/2024/07/13/11/"/>
    <id>https://perseisqaq.github.io/2024/07/13/11/</id>
    <published>2024-07-12T16:26:11.000Z</published>
    <updated>2024-07-12T16:26:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>3011.判断一个数组是否可以变为有序</p><span id="more"></span><p><a href="https://leetcode.cn/problems/find-if-array-can-be-sorted/description/?envType=daily-question&amp;envId=2024-07-13">https://leetcode.cn/problems/find-if-array-can-be-sorted/description/?envType=daily-question&amp;envId=2024-07-13</a></p><p>给你一个下标从<strong>0</strong>开始且全是<strong>正</strong>整数的数组 nums 。</p><p>一次<strong>操作</strong>中，如果两个<strong>相邻</strong>元素在二进制下数位为<strong>1</strong>的数目<strong>相同</strong>，那么你可以将这两个元素交换。你可以执行这个操作<strong>任意次 （也可以 0 次）</strong>。</p><p>如果你可以使数组变有序，请你返回<code>true</code>，否则返回<code>false</code>。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>因为一个数只能与相邻的，二进制下1的个数相同的数交换，所以我们可以把整个数组分为若干个部分，每个部分内的数二进制下1的个数相同。<br>由题意可知，每个部分之间的相互顺序不可更换<br>我们再对这m个部分分别进行排序。<br>最后遍历一遍数组，如果仍然出现顺序不正确的情况，说明无法使数组变有序。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">count</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span>&#123;</span><br><span class="line">    cnt := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x&gt;<span class="number">0</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> x &amp; <span class="number">1</span> != <span class="number">0</span>&#123;</span><br><span class="line">            cnt ++</span><br><span class="line">        &#125;</span><br><span class="line">        x &gt;&gt;= <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">quick_sort</span><span class="params">(nums []<span class="type">int</span>, l,r <span class="type">int</span>)</span></span>&#123;</span><br><span class="line">    x,i,j := nums[(l+r)/<span class="number">2</span>],l,r</span><br><span class="line">    <span class="keyword">for</span> i&lt;=j&#123;</span><br><span class="line">        <span class="keyword">for</span> nums[i]&lt;x&#123;</span><br><span class="line">            i++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> nums[j]&gt;x&#123;</span><br><span class="line">            j--</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> i&lt;=j &#123;</span><br><span class="line">            nums[i],nums[j] = nums[j],nums[i]</span><br><span class="line">            i++</span><br><span class="line">            j--</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> l&lt;j &#123;</span><br><span class="line">        quick_sort(nums,l,j)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> i&lt;r &#123;</span><br><span class="line">        quick_sort(nums,i,r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canSortArray</span><span class="params">(nums []<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">    n,l := <span class="built_in">len</span>(nums),<span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> cnt = <span class="built_in">make</span>([]<span class="type">int</span> ,n)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        cnt[i] = count(nums[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> cnt[i]!=cnt[i<span class="number">-1</span>]&#123;</span><br><span class="line">            quick_sort(nums,l,i<span class="number">-1</span>)</span><br><span class="line">            l = i</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    quick_sort(nums,l,n<span class="number">-1</span>)</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span>;i&lt;n;i++&#123;</span><br><span class="line">        <span class="keyword">if</span> nums[i]&lt;nums[i<span class="number">-1</span>]&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;3011.判断一个数组是否可以变为有序&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>力扣每日一题2024-07-12</title>
    <link href="https://perseisqaq.github.io/2024/07/12/07/"/>
    <id>https://perseisqaq.github.io/2024/07/12/07/</id>
    <published>2024-07-11T16:34:07.000Z</published>
    <updated>2024-07-11T16:34:07.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>2974.最小数字游戏</p><span id="more"></span><p><a href="https://leetcode.cn/problems/minimum-number-game/description/?envType=daily-question&amp;envId=2024-07-12">https://leetcode.cn/problems/minimum-number-game/description/?envType=daily-question&amp;envId=2024-07-12</a></p><p>你有一个下标从<strong>0</strong>开始、长度为<strong>偶数</strong>的整数数组<code>nums</code>，同时还有一个空数组<code>arr</code>。Alice 和 Bob 决定玩一个游戏，游戏中每一轮 Alice 和 Bob 都会各自执行一次操作。游戏规则如下：</p><ul><li>每一轮，Alice 先从<code>nums</code>中移除一个<strong>最小</strong>元素，然后 Bob 执行同样的操作。</li><li>接着，Bob 会将移除的元素添加到数组<code>arr</code>中，然后 Alice 也执行同样的操作。</li><li>游戏持续进行，直到<code>nums</code>变为空。<br>返回结果数组<code>arr</code>。</li></ul><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>将数组从小到大排序后两两分组，对于每一个单独的分组，先将后面的数放入<code>arr</code>数组，再将前面的数放入<code>arr</code>数组。<br>也就是说放入的下标顺序是 1 0 3 2 5 4……<br>写一个for循环，步长为2，循环放入即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numberGame</span><span class="params">(nums []<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(nums)</span><br><span class="line">    sort.Ints(nums)</span><br><span class="line">    <span class="keyword">var</span> arr []<span class="type">int</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i += <span class="number">2</span> &#123;</span><br><span class="line">        arr = <span class="built_in">append</span>(arr, nums[i])</span><br><span class="line">        arr = <span class="built_in">append</span>(arr, nums[i<span class="number">-1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;2974.最小数字游戏&lt;/p&gt;</summary>
    
    
    
    
    <category term="每日一题" scheme="https://perseisqaq.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Git学习笔记</title>
    <link href="https://perseisqaq.github.io/2024/07/07/36/"/>
    <id>https://perseisqaq.github.io/2024/07/07/36/</id>
    <published>2024-07-07T04:36:36.000Z</published>
    <updated>2024-07-07T04:36:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>本学习笔记基于b站黑马程序员Git教程<a href="https://www.bilibili.com/video/BV1MU4y1Y7h5/">https://www.bilibili.com/video/BV1MU4y1Y7h5/</a></p><span id="more"></span><h2 id="Git下载与安装"><a href="#Git下载与安装" class="headerlink" title="Git下载与安装"></a>Git下载与安装</h2><p><a href="https://git-scm.com/">https://git-scm.com/</a> 在这里下载安装</p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><h4 id="设置用户信息"><a href="#设置用户信息" class="headerlink" title="设置用户信息"></a>设置用户信息</h4><ol><li>设置用户名 <code>git config --global user.name &quot;yourname&quot;</code><br>双引号内为用户名</li><li>设置邮箱 <code>git config --global user.email &quot;youremail&quot;</code><br>双引号内为邮箱</li></ol><h4 id="为常用命令配置别名"><a href="#为常用命令配置别名" class="headerlink" title="为常用命令配置别名"></a>为常用命令配置别名</h4><ol><li>在用户目录下，创建 .bashrc 文件<br>可以打开GitBash 执行 <code>touch ~/.bashrc</code></li><li>在 .bashrc 中输入:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看git提交日志</span></span><br><span class="line"><span class="built_in">alias</span> git-log=<span class="string">&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span></span><br><span class="line"><span class="comment"># 输出当前目录所有文件与基本信息</span></span><br><span class="line"><span class="built_in">alias</span> ll=<span class="string">&#x27;ls -al&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="配置本地仓库"><a href="#配置本地仓库" class="headerlink" title="配置本地仓库"></a>配置本地仓库</h3><ol><li>创建一个空目录作为本地Git仓库</li><li>在目录里右键打开 Git bash</li><li>执行命令 <code>git init</code></li><li>创建成功后目录里会有一个.git目录</li></ol><h2 id="Git常用指令"><a href="#Git常用指令" class="headerlink" title="Git常用指令"></a>Git常用指令</h2><h3 id="文件状态转换"><a href="#文件状态转换" class="headerlink" title="文件状态转换"></a>文件状态转换</h3><ol><li>使用 git add 命令 工作区 -&gt; 暂存区</li><li>使用 git commit 命令 暂存区 -&gt; 本地仓库</li></ol><h3 id="查看修改的状态"><a href="#查看修改的状态" class="headerlink" title="查看修改的状态"></a>查看修改的状态</h3><ul><li>执行命令 <code>git status</code></li></ul><h3 id="提交工作区到暂存区"><a href="#提交工作区到暂存区" class="headerlink" title="提交工作区到暂存区"></a>提交工作区到暂存区</h3><ol><li>执行命令 <code>git add .</code></li><li>如果有想要忽略的文件，创建一个 .gitignore 文件，将文件名写在里面</li></ol><h3 id="提交暂存区到本地仓库"><a href="#提交暂存区到本地仓库" class="headerlink" title="提交暂存区到本地仓库"></a>提交暂存区到本地仓库</h3><ul><li>执行命令 <code>git commit -m &quot; &quot;</code> 双引号内是你的commit内容</li></ul><h3 id="查看提交日志"><a href="#查看提交日志" class="headerlink" title="查看提交日志"></a>查看提交日志</h3><ul><li>执行命令 <code>git log [options]</code>（前面配置的）<ul><li>options包含：<ul><li><code>--all</code> 显示所有分支</li><li><code>--pretty=oneline</code> 提交信息显示为一行</li><li><code>--abbrev-commit</code> 使输出的commitid更简洁</li><li><code>--graph</code> 以图的形式显示</li></ul></li></ul></li><li>如果要查看已经删除的提交记录，执行命令 <code>git reflog</code></li></ul><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><ul><li>执行命令 <code>git reset --hard &quot;commitid&quot;</code> commitid可以在log中查看</li></ul><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><h3 id="查看本地分支"><a href="#查看本地分支" class="headerlink" title="查看本地分支"></a>查看本地分支</h3><ul><li>执行命令 <code>git branch</code></li></ul><h3 id="创建本地分支"><a href="#创建本地分支" class="headerlink" title="创建本地分支"></a>创建本地分支</h3><ul><li>执行命令 <code>git branch branchname</code> branchname为分支名</li></ul><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><ul><li>执行命令 <code>git checkout branchname</code></li><li>如果想要切换到一个不存在的分支（切换的同时创建分支），执行命令 <code>git checkout -b branchname</code></li></ul><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><ol><li>切换到目标分支</li><li>执行命令 <code>git merge branchname</code></li></ol><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p>只能删除当前分支以外的分支</p><ul><li><code>git branch -d branchname</code> 删除分支事，需要做各种检查</li><li><code>git branch -D branchname</code> 不做任何检查，强制删除分支</li></ul><h3 id="分支重命名"><a href="#分支重命名" class="headerlink" title="分支重命名"></a>分支重命名</h3><ul><li>执行命令 <code>git branch -m oldname newname</code></li></ul><h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>两个分支对文件的修改存在冲突（如同时修改了同一文件的同一行），就要手动解决冲突</p><ol><li>处理文件中冲突的地方</li><li>提交到缓存区</li><li>提交到仓库（不用加-m）</li></ol><h2 id="Git远程仓库"><a href="#Git远程仓库" class="headerlink" title="Git远程仓库"></a>Git远程仓库</h2><p>这里选择了github</p><h3 id="创建SSH-Key"><a href="#创建SSH-Key" class="headerlink" title="创建SSH Key"></a>创建SSH Key</h3><ul><li>查询用户主目录下是否存在.ssh文件，里面是否有id_rsa与id_rsa.pub这两个文件<ul><li>如果没有，在开始菜单中找到GitBash，输入 <code>ssh-keygen -t rsa -C &quot;your_email&quot;</code> <strong>双引号内为github注册使用的邮箱</strong></li></ul></li></ul><h3 id="github填写SSH-Key"><a href="#github填写SSH-Key" class="headerlink" title="github填写SSH Key"></a>github填写SSH Key</h3><ol><li>点击右上角头像，打开“Settings”-“Account settings”-“SSH Keys”页面</li><li>点击“New SSH Key”</li><li>在Key里填写id_rsa.pub的内容</li></ol><h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><ul><li><p>在GitBash里输入 <code>ssh -T git@github.com</code><br>第一次设置需要输入yes，如果出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi xxx! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>则为成功</p></li></ul><h3 id="在github建仓库"><a href="#在github建仓库" class="headerlink" title="在github建仓库"></a>在github建仓库</h3><ul><li>建一个仓库用来存放项目</li></ul><h3 id="关联远程仓库"><a href="#关联远程仓库" class="headerlink" title="关联远程仓库"></a>关联远程仓库</h3><p>有两种可选方法</p><h4 id="clone仓库地址到本地"><a href="#clone仓库地址到本地" class="headerlink" title="clone仓库地址到本地"></a>clone仓库地址到本地</h4><p>这种方法可以实现一个仓库存放多个不同的代码</p><ol><li>在&lt;&gt;Code那里复制地址</li><li>clone到本地 （可以修改名称），<strong>记得改成自己仓库的地址（</strong></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/PerseisQAQ/projects.git</span><br></pre></td></tr></table></figure><p>在文件夹的内部可以创建多个不同的文件夹，不同的文件夹放置不同的项目代码。这样就可以实现很多不同的项目代码放置到同一个代码仓库中</p><h4 id="关联远程仓库到本地仓库"><a href="#关联远程仓库到本地仓库" class="headerlink" title="关联远程仓库到本地仓库"></a>关联远程仓库到本地仓库</h4><ul><li>根据仓库地址，在本地仓库的命令行输入，<strong>记得改成自己仓库的地址（</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/PerseisQAQ/projects.git</span><br></pre></td></tr></table></figure><h3 id="本地内容上传"><a href="#本地内容上传" class="headerlink" title="本地内容上传"></a>本地内容上传</h3><p>关联好仓库后就可以把本地仓库的内容推送到远程仓库了，在GitBash输入</p><ul><li>如果新建的远程仓库是空的</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><ul><li>如果远程仓库非空</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h3 id="从远程仓库抓取与拉取"><a href="#从远程仓库抓取与拉取" class="headerlink" title="从远程仓库抓取与拉取"></a>从远程仓库抓取与拉取</h3><ul><li>抓取命令 <code>get fetch [远端名称][分支名]</code><ul><li>将仓库里的更新都抓取到本地，不进行合并</li><li>如果不指定远端名称和分支名，则抓取所有分支</li></ul></li><li>拉取命令 <code>git pull [远端名称][分支名]</code><ul><li>将仓库里的更新拉到本地并自动进行合并（fetch+merge）</li><li>如果不指定远端名称和分支名，则抓取所有并更新当前分支</li></ul></li></ul><h3 id="远程解决冲突"><a href="#远程解决冲突" class="headerlink" title="远程解决冲突"></a>远程解决冲突</h3><ul><li>push之前先pull一下，看看有没有冲突，有冲突在本地解决掉再push</li></ul><h2 id="记录一下遇到的奇怪问题们"><a href="#记录一下遇到的奇怪问题们" class="headerlink" title="记录一下遇到的奇怪问题们"></a>记录一下遇到的奇怪问题们</h2><h3 id="clone到本地仓库时"><a href="#clone到本地仓库时" class="headerlink" title="clone到本地仓库时"></a>clone到本地仓库时</h3><h4 id="端口443连接失败"><a href="#端口443连接失败" class="headerlink" title="端口443连接失败"></a>端口443连接失败</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to connect to github.com port 443 after 21271 ms: Couldn&#x27;t connect to server</span><br></pre></td></tr></table></figure><ul><li>原因：正在使用VPN，VPN的使用可能会改变本机的系统端口号，从而影响到Git的正常连接</li><li>解决方法：</li></ul><ol><li>打开“设置 -&gt; 网络和Internet -&gt; 代理”，记录下当前的端口号</li><li>设置Git端口号，<strong>假设当前端口号为7890</strong>，使用命令</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy 127.0.0.1:7890</span><br><span class="line">git config --global https.proxy 127.0.0.1:7890</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;本学习笔记基于b站黑马程序员Git教程&lt;a href=&quot;https://www.bilibili.com/video/BV1MU4y1Y7h5/&quot;&gt;https://www.bilibili.com/video/BV1MU4y1Y7h5/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="学习" scheme="https://perseisqaq.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
</feed>
